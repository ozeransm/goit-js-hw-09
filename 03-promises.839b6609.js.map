{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,UAAWC,SAASC,cAAc,SAClCC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAItC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC7BC,YAAW,KACPN,EAEFI,EAAQ,C,SAACN,E,MAAUC,IAGnBM,EAAO,C,SAACP,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAbTT,EAAKC,UAAUgB,iBAAiB,SAiBhC,SAAmBC,GAEjB,GADAA,EAAIC,mBAC0B,WAAxBD,EAAIE,OAAOC,UACf,OAEF,IAAIC,EAAQC,SAASvB,EAAKI,WAAWoB,OACrC,GAAGD,SAAUvB,EAAKM,YAAYkB,QAAQ,GAAKD,SAASvB,EAAKK,UAAUmB,OAAO,GAAKD,SAASvB,EAAKI,WAAWoB,OAAO,EAC/G,IAAI,IAAIC,EAAE,EAAEA,GAAGF,SAASvB,EAAKM,YAAYkB,OAAOC,IAE7CC,QAAQC,IAAIpB,EAAckB,EAAEH,GAC5BM,MAAK,EAACpB,SAACA,EAAQC,MAAEA,MAAUoB,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAqBvB,QAAiBC,MAAU,IACjGuB,OAAI,EAACxB,SAACA,EAAQC,MAAEA,MAAUoB,EAAA/B,GAASgC,OAAOG,QAAQ,sBAAoBzB,QAAiBC,MAAU,KACpGa,GAAOC,SAASvB,EAAKK,UAAUmB,YAE5BE,QAAQC,IAAI,wC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  formInput: document.querySelector('.form'),\n  inputDelay: document.querySelector('[name=\"delay\"]'),\n  inputStep: document.querySelector('[name=\"step\"]'),\n  inputAmount: document.querySelector('[name=\"amount\"]'),\n};\nrefs.formInput.addEventListener('click',handleBtn);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n  setTimeout(()=>{\n  if (shouldResolve) {\n    // Fulfill\n    resolve({position, delay});\n  } else {\n    // Reject\n    reject({position, delay});\n  }\n}, delay);\n});\n}\n\nfunction handleBtn(evt){\n  evt.preventDefault();\n  if (!(evt.target.nodeName === 'BUTTON')){\n    return;\n  }\n  let delay = parseInt(refs.inputDelay.value);\n  if((parseInt(refs.inputAmount.value)>=0)&&(parseInt(refs.inputStep.value)>0)&&(parseInt(refs.inputDelay.value)>0)){\n  for(let i=1;i<=parseInt(refs.inputAmount.value);i++){\n    // i*parseInt(refs.inputStep.value)+parseInt(refs.inputDelay.value)\n     console.log(createPromise(i,delay)\n    .then(({position, delay})=>{Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);})\n    .catch(({position, delay})=>{Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);}));\n  delay += parseInt(refs.inputStep.value);\n  }\n} else{console.log('значення полів мають бути більше нуля')}\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formInput","document","querySelector","inputDelay","inputStep","inputAmount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","target","nodeName","delay1","parseInt","value","i","console","log","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.839b6609.js.map"}